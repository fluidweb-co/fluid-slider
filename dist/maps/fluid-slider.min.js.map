{"version":3,"file":"../fluid-slider.min.js","sources":["fluid-slider.js"],"sourcesContent":["/**\n * Fluid Slider\n *\n * Lightweight Slider library with support for mobile devices with touch gestures (swipe left/right), navigation buttons and slider count bullets.\n * \n * (c) 2021 Fluidweb.co, MIT License, https://fluidweb.co\n */\n(function (root, factory) {\n\tif ( typeof define === 'function' && define.amd ) {\n\t  define([], factory(root));\n\t} else if ( typeof exports === 'object' ) {\n\t  module.exports = factory(root);\n\t} else {\n\t  root.FluidSlider = factory(root);\n\t}\n})(typeof global !== 'undefined' ? global : this.window || this.global, function (root) {\n\n\t'use strict';\n\n\n\tvar _hasInitialized = false;\n\tvar _transitionEndEvent = window.whichTransitionEnd ? window.whichTransitionEnd() : 'transitionend';\n\tvar _publicMethods = {\n\t\tmanagers: [],\n\t};\n\tvar _settings = { };\n\tvar _defaults = {\n\t\tsliderWrapperSelector: '.slider-wrapper',\n\t\tsliderViewportSelector: '.slider-viewport',\n\t\tsliderContainerSelector: '.slider-container',\n\t\tsliderItemSelector: '.slider-item',\n\t\tisActivatedClass: 'is-activated',\n\t\tisDisabledClass: 'is-disabled',\n\t\tisResizingClass: 'is-resizing',\n\t\tisAnimatingClass: 'is-animating',\n\t\tisCurrentClass: 'is-current',\n\t\t\n\t\tslideSpacing: 0, // px\n\t\tslideSensitivity: 30, // % of slide item width\n\t\ttouchEventsSensitivity: 25, // px\n\t\t\n\t\tslidesPerViewAttribute: 'data-slider-per-view',\n\t\tslidesPerView: {\n\t\t\txs: { breakpointInitial: 0, breakpointFinal: 749, itemsPerView: 1 },\n\t\t\tmd: { breakpointInitial: 750, breakpointFinal: 999, itemsPerView: 1 },\n\t\t\tml: { breakpointInitial: 1000, breakpointFinal: 1199, itemsPerView: 1 },\n\t\t\tlg: { breakpointInitial: 1200, breakpointFinal: 1499, itemsPerView: 1 },\n\t\t\txl: { breakpointInitial: 1500, breakpointFinal: 100000, itemsPerView: 1 }, // breakpointFinal can be any very high number\n\t\t},\n\t\t\n\t\tcreateNavigationButtons: false,\n\t\tcreateNavigationButtonsAttribute: 'data-slider-navigation-buttons',\n\t\tnavigationButtonsSelector: '.slider-navigation',\n\t\tnavigationPrevSelector: '.slider-navigation__prev',\n\t\tnavigationNextSelector: '.slider-navigation__next',\n\t\thasNavigationButtonsClass: 'has-navigation-buttons',\n\t\tnavigationButtonsTemplate: '<div class=\"slider-navigation\"><button class=\"slider-navigation__prev\">Previous</button><button class=\"slider-navigation__next\">Next</button></div>',\n\t\t\n\t\tcreateNavigationBullets: true,\n\t\tcreateNavigationBulletsAttribute: 'data-slider-navigation-bullets',\n\t\tnavigationBulletsSelector: '.slider-navigation-bullets',\n\t\tnavigationBulletItemSelector: '.slider-navigation-bullets__item',\n\t\thasNavigationBulletsClass: 'has-navigation-bullets',\n\t\tnavigationBulletsWrapperTemplate: '<div class=\"slider-navigation-bullets\"></div>',\n\t\tnavigationBulletItemTemplate: '<span class=\"slider-navigation-bullets__item\"></span>',\n\t};\n\n\n\n\t/*!\n\t* Merge two or more objects together.\n\t* (c) 2017 Chris Ferdinandi, MIT License, https://gomakethings.com\n\t* @param   {Boolean}  deep     If true, do a deep (or recursive) merge [optional]\n\t* @param   {Object}   objects  The objects to merge together\n\t* @returns {Object}            Merged values of defaults and options\n\t*/\n\tvar extend = function () {\n\n\t\t// Variables\n\t\tvar extended = {};\n\t\tvar deep = false;\n\t\tvar i = 0;\n\n\t\t// Check if a deep merge\n\t\tif ( Object.prototype.toString.call( arguments[0] ) === '[object Boolean]' ) {\n\t\tdeep = arguments[0];\n\t\ti++;\n\t\t}\n\n\t\t// Merge the object into the extended object\n\t\tvar merge = function (obj) {\n\t\tfor (var prop in obj) {\n\t\t\tif (obj.hasOwnProperty(prop)) {\n\t\t\t// If property is an object, merge properties\n\t\t\tif (deep && Object.prototype.toString.call(obj[prop]) === '[object Object]') {\n\t\t\t\textended[prop] = extend(extended[prop], obj[prop]);\n\t\t\t} else {\n\t\t\t\textended[prop] = obj[prop];\n\t\t\t}\n\t\t\t}\n\t\t}\n\t\t};\n\n\t\t// Loop through each object and conduct a merge\n\t\tfor (; i < arguments.length; i++ ) {\n\t\tvar obj = arguments[i];\n\t\tmerge(obj);\n\t\t}\n\n\t\treturn extended;\n\n\t};\n\n\n\n\t/**\n\t * Get slider manager instance from slider element\n\t */\n\tvar getManager = function ( sliderViewport ) {\n\t\tvar manager;\n\t\tfor ( var i = 0; i < _publicMethods.managers.length; i++ ) {\n\t\t\tvar managerItem = _publicMethods.managers[i];\n\t\t\tif ( managerItem.sliderViewport == sliderViewport ) { manager = managerItem; break; }\n\t\t}\n\t\treturn manager;\n\t}\n\n\n\n\t/**\n\t * Get number of slides visible at once\n\t */\n\tvar getSlidesPerView = function ( manager ) {\n\t\tvar itemsPerView = 1;\n\t\tvar windowWidth = window.innerWidth;\n\t\tvar slidesPerView = _settings.slidesPerView;\n\n\t\t// Try get slides per view settings from html attributes\n\t\tvar slidesPerViewAttr = manager.sliderWrapper.getAttribute( _settings.slidesPerViewAttribute );\n\t\tif ( slidesPerViewAttr ) {\n\t\t\ttry {\n\t\t\t\tvar parsedParams = JSON.parse( slidesPerViewAttr );\n\t\t\t\tslidesPerView = extend( _settings.slidesPerView, parsedParams );\n\t\t\t}\n\t\t\tcatch (err) {\n\t\t\t\tconsole.log( 'Could not parse attribute \"' + _settings.slidesPerViewAttribute + '\" into JSON.');\n\t\t\t}\n\t\t}\n\t\t\n\t\tObject.entries( slidesPerView ).forEach( function ( values, i ) {\n\t\t\tif ( windowWidth >= values[1].breakpointInitial && windowWidth <= values[1].breakpointFinal ) {\n\t\t\t\titemsPerView = values[1].itemsPerView;\n\t\t\t}\n\t\t});\n\n\t\treturn itemsPerView;\n\t}\n\n\n\n\t/**\n\t * Sanitize slide number to prevent moving to inexistent slides\n\t */\n\tvar getSanitizedSlideNumber = function ( manager, number ) {\n\t\tvar maxActiveSlideAdjustment = getSlidesPerView( manager );\n\t\tif ( number > manager.slideCount - maxActiveSlideAdjustment ) { number = manager.slideCount - maxActiveSlideAdjustment; }\n\t\treturn number < 0 ? 0 : number;\n\t}\n\n\n\n\t/**\n\t * Calculate spacing between slide items\n\t */\n\tvar getSlidesSpacing = function( manager ) {\n\t\t// Return default if too few slides\n\t\tif ( manager.slides.length < 2 ) { return _settings.slideSpacing; }\n\n\t\t// Calculate space between slides\n\t\tvar rightEdge = manager.slides.item(0).getBoundingClientRect().right;\n\t\tvar leftEdge = manager.slides.item(1).getBoundingClientRect().left;\n\t\tvar spacing = leftEdge - rightEdge;\n\t\tspacing = spacing > 0 ? spacing : _settings.slideSpacing;\n\t\treturn spacing;\n\t}\n\n\n\n\t/**\n\t * Get container position to display the slide by its number\n\t */\n\tvar getSlidePosition = function ( manager, number ) {\n\t\treturn -( ( number * manager.slideWidth ) + ( number  * manager.slideSpacing ) );\n\t}\n\n\n\n\tvar setNavigationButtonDisabledStatus = function( button, isDisabled ) {\n\t\t// Bail if button not valid\n\t\tif ( ! button ) { return; }\n\t\t\n\t\tif ( isDisabled ) {\n\t\t\tbutton.classList.add( _settings.isDisabledClass );\n\t\t}\n\t\telse {\n\t\t\tbutton.classList.remove( _settings.isDisabledClass );\n\t\t}\n\t}\n\n\n\n\t/**\n\t * Set active slide and container element to new position\n\t */\n\tvar setActiveSlide = function( manager, number ) {\n\t\t// Set sanitized active slide number\n\t\tmanager.activeSlide = getSanitizedSlideNumber( manager, number );\n\n\t\t// Prepare to remove animating class when transition ends\n\t\tmanager.sliderViewport.addEventListener( _transitionEndEvent, function removeAnimatingClass( e ) {\n\t\t\tif ( e.propertyName == 'transform' ) {\n\t\t\t\tmanager.sliderViewport.classList.remove( _settings.isAnimatingClass );\n\t\t\t\tmanager.sliderViewport.removeEventListener( _transitionEndEvent, removeAnimatingClass );\n\t\t\t}\n\t\t} );\n\n\t\t// Apply animating class\n\t\tmanager.sliderViewport.classList.add( _settings.isAnimatingClass );\n\n\t\t// Change container position\n\t\tvar translateValue = 'translateX(' + getSlidePosition( manager, manager.activeSlide ) + 'px)';\n\t\tmanager.sliderContainer.style.transform = translateValue;\n\t\tmanager.sliderContainer.style.msTransform = translateValue; // Add support for IE9+\n\n\t\t// Set current bullet\n\t\tif ( manager.sliderNavigationBullets ) {\n\t\t\tvar bullets = manager.sliderNavigationBullets.querySelectorAll( _settings.navigationBulletItemSelector );\n\t\t\tfor ( var i = 0; i < bullets.length; i++ ) {\n\t\t\t\tvar bullet = bullets[i];\n\t\t\t\tif ( i == manager.activeSlide ) {\n\t\t\t\t\tbullet.classList.add( _settings.isCurrentClass );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tbullet.classList.remove( _settings.isCurrentClass );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Set navigation buttons status\n\t\tif ( manager.sliderNavigation ) {\n\t\t\tsetNavigationButtonDisabledStatus( manager.sliderNavigationPrev, manager.activeSlide <= 0 )\n\t\t\tsetNavigationButtonDisabledStatus( manager.sliderNavigationNext, manager.activeSlide >= getSanitizedSlideNumber( manager, manager.slideCount ) );\n\t\t}\n\t}\n\n\n\n\t/**\n\t * Remove sizing styles from slider element, container and items\n\t */\n\tvar removeSlideSizing = function ( manager ) {\n\t\t// Lock viewport while resizing\n\t\tmanager.sliderViewport.classList.remove( _settings.isActivatedClass );\n\t\tmanager.sliderViewport.classList.add( _settings.isResizingClass );\n\t\tmanager.sliderViewport.style.height = manager.sliderViewport.getBoundingClientRect().height + 'px';\n\n\t\t// Remove container width\n\t\tmanager.sliderContainer.style.width = '';\n\n\t\t// Remove slide width for each slide item\n\t\tfor ( var slideIndex = 0; slideIndex < manager.slides.length; slideIndex++ ) {\n\t\t\tvar slideItem = manager.slides[ slideIndex ];\n\t\t\tslideItem.style.width = '';\n\t\t\tslideItem.style.marginLeft = '';\n\t\t}\n\t}\n\n\n\n\t/**\n\t * Go to previous slider view\n\t */\n\tvar goToPrevView = function ( manager ) {\n\t\tvar moveToSlide = manager.activeSlide - getSlidesPerView( manager );\n\n\t\t// Give visual feedback for the last view\n\t\tif (  manager.activeSlide <= 0 ) {\n\t\t\tplayEndSlidesFeedback( manager, moveToSlide, 25 );\n\t\t}\n\t\telse {\n\t\t\t_publicMethods.goTo( manager, moveToSlide );\n\t\t}\n\t}\n\n\n\n\t/**\n\t * Go to next slider view\n\t */\n\tvar goToNextView = function ( manager ) {\n\t\tvar moveToSlide = manager.activeSlide + getSlidesPerView( manager );\n\n\t\t// Give visual feedback for the last view\n\t\tif ( moveToSlide >= manager.slideCount ) {\n\t\t\tplayEndSlidesFeedback( manager, moveToSlide, -25 );\n\t\t}\n\t\telse {\n\t\t\t_publicMethods.goTo( manager, moveToSlide );\n\t\t}\n\t}\n\n\n\n\t/**\n\t * Move slider slightly to give visual feedback for end of slider reached\n\t */\n\tvar playEndSlidesFeedback = function ( manager, moveToSlide, distance ) {\n\t\t// Prepare to remove animating class when transition ends\n\t\tmanager.sliderViewport.addEventListener( _transitionEndEvent, function removeAnimatingClass( e ) {\n\t\t\tif ( e.propertyName == 'transform' ) {\n\t\t\t\tmanager.sliderViewport.classList.remove( _settings.isAnimatingClass );\n\t\t\t\tmanager.sliderViewport.removeEventListener( _transitionEndEvent, removeAnimatingClass );\n\n\t\t\t\t// Move to slide after transition ends\n\t\t\t\t_publicMethods.goTo( manager, moveToSlide );\n\t\t\t}\n\t\t} );\n\t\t\n\t\t// Apply animating class\n\t\tmanager.sliderViewport.classList.add( _settings.isAnimatingClass );\n\t\t\n\t\t// Slightly change position of slider container\n\t\tmanager.sliderContainer.style.transform = 'translateX(' + ( getSlidePosition( manager, manager.activeSlide ) + distance ) + 'px)';\n\t}\n\n\n\n\t/**\n\t * Handle the slider movement on pan event\n\t */\n\tvar handleSlidePan = function( manager, e ) {\n\t\t// Move slides while moving touch points\n\t\tvar distance = getSlidePosition( manager, manager.activeSlide ) + e.deltaX ;\n\t\tmanager.sliderContainer.style.transform = 'translateX(' + distance + 'px)';\n\n\t\t// Go to slide when touch released\n\t\tif( e.isFinal  ) {\n\t\t\t// Change to previous slide if swipe right is detected\n\t\t\tif ( e.velocityX > 1 ) {\n\t\t\t\tvar slidesToMove = Math.abs( getSlidesPerView( manager ) );\n\t\t\t\t_publicMethods.goTo( manager, manager.activeSlide - slidesToMove );\n\t\t\t}\n\t\t\t// Change to next slide if swipe left is detected\n\t\t\telse if ( e.velocityX < -1 ) {\n\t\t\t\tvar slidesToMove = Math.abs( getSlidesPerView( manager ) );\n\t\t\t\t_publicMethods.goTo( manager, manager.activeSlide + slidesToMove );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tvar distanceChange = ( _settings.slideSensitivity / 100 ) * manager.slideWidth;\n\t\t\t\tvar slidesToMove = Math.abs( Math.round( e.deltaX / manager.slideWidth ) );\n\n\t\t\t\t// Change to next slide based on position\n\t\t\t\tif ( Math.abs( e.angle ) >= 150 && e.deltaX <= -(distanceChange) ) {\n\t\t\t\t\t_publicMethods.goTo( manager, manager.activeSlide + slidesToMove );\n\t\t\t\t}\n\t\t\t\t// Change to prev slide based on position\n\t\t\t\telse if ( Math.abs( e.angle ) <= 30 && e.deltaX >= distanceChange ) {\n\t\t\t\t\t_publicMethods.goTo( manager, manager.activeSlide - slidesToMove );\n\t\t\t\t}\n\t\t\t\t// Realign the current slide when a change is not needed\n\t\t\t\telse {\n\t\t\t\t\t_publicMethods.goTo( manager, manager.activeSlide );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\n\n\t/**\n\t * Handle document clicks and route to the appropriate function.\n\t */\n\tvar handleCapturedClick = function ( e ) {\n\t\t// PREVIOUS VIEW\n\t\tif ( e.target.closest( _settings.navigationPrevSelector ) ) {\n\t\t\te.preventDefault();\n\t\t\tvar sliderWrapper = e.target.closest( _settings.sliderWrapperSelector );\n\t\t\tvar manager = getManager( sliderWrapper.querySelector( _settings.sliderViewportSelector ) );\n\t\t\tgoToPrevView( manager );\n\t\t}\n\t\t// NEXT VIEW\n\t\telse if ( e.target.closest( _settings.navigationNextSelector ) ) {\n\t\t\te.preventDefault();\n\t\t\tvar sliderWrapper = e.target.closest( _settings.sliderWrapperSelector );\n\t\t\tvar manager = getManager( sliderWrapper.querySelector( _settings.sliderViewportSelector ) );\n\t\t\tgoToNextView( manager );\n\t\t}\n\t};\n\n\n\n\t/**\n\t * Resize slider elements with absolute values\n\t */\n\t_publicMethods.resizeSlider = function( manager ) {\n\t\t// Clear sizings before resizing\n\t\tremoveSlideSizing( manager );\n\n\t\t// Calculate width of container and slides\n\t\tmanager.slideSpacingCount = ( manager.slideCount * ( manager.slideCount - 1 ) );\n\t\tmanager.slideWidth = manager.slides.item(0).getBoundingClientRect().width;\n\t\tmanager.slideSpacing = getSlidesSpacing( manager );\n\t\tmanager.containerWidth = ( manager.slideSpacingCount * manager.slideSpacing ) + ( manager.slideCount * manager.slideWidth );\n\n\t\t// Set container width\n\t\tmanager.sliderContainer.style.width = manager.containerWidth + 'px';\n\n\t\t// Set slide width for each slide item\n\t\tfor ( var slideIndex = 0; slideIndex < manager.slides.length; slideIndex++ ) {\n\t\t\tvar slideItem = manager.slides[ slideIndex ];\n\t\t\tslideItem.style.width = manager.slideWidth + 'px';\n\t\t\tif ( slideIndex > 0 ) { slideItem.style.marginLeft = manager.slideSpacing + 'px' };\n\t\t}\n\n\t\t// Release viewport after resizing\n\t\tmanager.sliderViewport.classList.add( _settings.isActivatedClass );\n\t\tmanager.sliderViewport.classList.remove( _settings.isResizingClass );\n\t\tmanager.sliderViewport.style.height = '';\n\n\t\t// Make sure to display the correct active slides when resizing\n\t\tvar slidesPerView = getSlidesPerView( manager );\n\t\tif ( manager.activeSlide > manager.slideCount - slidesPerView ) {\n\t\t\t_publicMethods.goTo( manager, manager.slideCount - slidesPerView );\n\t\t}\n\t\telse {\n\t\t\t_publicMethods.goTo( manager, manager.activeSlide );\n\t\t}\n\n\t\t// Only display pagination when necessary\n\t\tif ( manager.sliderNavigation ) {\n\t\t\tmanager.sliderNavigation.style.display = manager.slideCount <= slidesPerView ? 'none' : '';\n\t\t}\n\t\tif ( manager.sliderNavigationBullets ) {\n\t\t\tmanager.sliderNavigationBullets.style.display = manager.slideCount <= slidesPerView ? 'none' : '';\n\t\t}\n\t}\n\n\n\n\t/**\n\t * Update current slide\n\t */\n\t_publicMethods.goTo = function( manager, number ) {\n\t\tsetActiveSlide( manager, number );\n\t};\n\t\n\n\n\t/**\n\t * Initialize Slider for an element\n\t */\n\t_publicMethods.initializeSlider = function( sliderWrapper ) {\n\t\tvar manager = {};\n\t\tmanager.sliderWrapper = sliderWrapper;\n\t\tmanager.sliderViewport = sliderWrapper.querySelector( _settings.sliderViewportSelector );\n\t\tmanager.sliderContainer = sliderWrapper.querySelector( _settings.sliderContainerSelector );\n\t\tmanager.slides = sliderWrapper.querySelectorAll( _settings.sliderItemSelector );\n\t\tmanager.slideCount = manager.slides.length;\n\t\tmanager.activeSlide = 0;\n\t\t\n\t\t// Initialize Hammer Touch event listeners\n\t\tmanager.hammerManager = new Hammer.Manager( manager.sliderViewport );\n\t\tmanager.hammerManager.add( new Hammer.Pan( { direction: Hammer.DIRECTION_HORIZONTAL, threshold: _settings.touchEventsSensitivity, pointers: 0 } ) );\n\t\tmanager.hammerManager.on( 'pan', function( e ) { handleSlidePan( manager, e ); } );\n\t\t\n\t\t// Add navigation buttons\n\t\tvar createNavigationButtonsAttrValue = manager.sliderWrapper.getAttribute( _settings.createNavigationButtonsAttribute );\n\t\tvar createNavigationButtonsValue = createNavigationButtonsAttrValue != null ? createNavigationButtonsAttrValue === 'true' : _settings.createNavigationButtons;\n\t\tif ( createNavigationButtonsValue ) {\n\t\t\tvar navigationElements = document.createElement('div');\n\t\t\tnavigationElements.innerHTML = _settings.navigationButtonsTemplate.trim();\n\t\t\tmanager.sliderWrapper.appendChild( navigationElements.childNodes[0] );\n\t\t\tmanager.sliderNavigation = sliderWrapper.querySelector( _settings.navigationButtonsSelector );\n\t\t\tmanager.sliderNavigationPrev = sliderWrapper.querySelector( _settings.navigationPrevSelector );\n\t\t\tmanager.sliderNavigationNext = sliderWrapper.querySelector( _settings.navigationNextSelector );\n\t\t\tmanager.sliderWrapper.classList.add( _settings.hasNavigationButtonsClass );\n\t\t}\n\n\t\t// Add navigation bullets\n\t\tvar createNavigationBulletsAttrValue = manager.sliderWrapper.getAttribute( _settings.createNavigationBulletsAttribute );\n\t\tvar createNavigationBulletsValue = createNavigationBulletsAttrValue != null ? createNavigationBulletsAttrValue === 'true' : _settings.createNavigationBullets;\n\t\tif ( createNavigationBulletsValue ) {\n\t\t\tvar navigationBulletsElements = document.createElement('div');\n\t\t\tnavigationBulletsElements.innerHTML = _settings.navigationBulletsWrapperTemplate.trim();\n\t\t\tmanager.sliderWrapper.appendChild( navigationBulletsElements.childNodes[0] );\n\t\t\tmanager.sliderNavigationBullets = sliderWrapper.querySelector( _settings.navigationBulletsSelector );\n\t\t\t\n\t\t\tfor ( var i = 0; i < manager.slideCount; i++ ) {\n\t\t\t\tvar bulletElement = document.createElement('div');\n\t\t\t\tbulletElement.innerHTML = _settings.navigationBulletItemTemplate.trim();\n\t\t\t\tmanager.sliderNavigationBullets.appendChild( bulletElement.childNodes[0] );\n\t\t\t}\n\n\t\t\tmanager.sliderWrapper.classList.add( _settings.hasNavigationBulletsClass );\n\t\t}\n\n\t\t// Set slider element as activated\n\t\tmanager.sliderViewport.classList.add( _settings.isActivatedClass );\n\t\t\n\t\t// Resize elements\n\t\t_publicMethods.resizeSlider( manager );\n\t\twindow.addEventListener( 'resize', function() { _publicMethods.resizeSlider( manager ); } );\n\t\t\n\t\t// Event other listeners\n\t\tdocument.addEventListener( 'click', handleCapturedClick );\n\t\t\n\t\t// Add slider manager to public methods\n\t\t_publicMethods.managers.push( manager );\n\t}\n\n\n\n\tvar finishInit = function() {\n\t\tvar sliders = document.querySelectorAll( _settings.sliderWrapperSelector );\n\t\tfor ( var slideIndex = 0; slideIndex < sliders.length; slideIndex++ ) {\n\t\t\t_publicMethods.initializeSlider( sliders[ slideIndex ] );\n\t\t}\n\t\t\n\t\t_hasInitialized = true;\n\t}\n\n\t\n\n\t/**\n\t * Initialize\n\t */\n\t_publicMethods.init = function( options ) {\n\t\tif ( _hasInitialized ) return;\n\n\t\t// Merge with general settings with options\n\t\t_settings = extend( _defaults, options );\n\n\t\t// Finish initialization after loading dependences\n\t\tif ( window.Hammer ) {\n\t\t\tfinishInit();\n\t\t}\n\t\t// Require dependencies with RequireBundle\n\t\telse if ( window.RequireBundle ) {\n\t\t\tRequireBundle.require( ['hammerjs'], function() {\n\t\t\t\tfinishInit();\n\t\t\t} );\n\t\t}\n\t};\n\n\n\n\t//\n\t// Public APIs\n\t//\n\treturn _publicMethods;\n\n});\n"],"names":["root","factory","define","amd","exports","module","FluidSlider","global","this","window","getManager","sliderViewport","manager","i","_publicMethods","managers","length","managerItem","getSlidesPerView","itemsPerView","windowWidth","innerWidth","slidesPerView","_settings","slidesPerViewAttr","sliderWrapper","getAttribute","slidesPerViewAttribute","parsedParams","JSON","parse","extend","err","console","log","Object","entries","forEach","values","breakpointInitial","breakpointFinal","getSanitizedSlideNumber","number","maxActiveSlideAdjustment","slideCount","getSlidePosition","slideWidth","slideSpacing","setNavigationButtonDisabledStatus","button","isDisabled","classList","add","isDisabledClass","remove","handleCapturedClick","e","moveToSlide","target","closest","navigationPrevSelector","preventDefault","sliderWrapperSelector","querySelector","sliderViewportSelector","activeSlide","playEndSlidesFeedback","goTo","navigationNextSelector","_hasInitialized","_transitionEndEvent","whichTransitionEnd","_defaults","sliderContainerSelector","sliderItemSelector","isActivatedClass","isResizingClass","isAnimatingClass","isCurrentClass","slideSensitivity","touchEventsSensitivity","xs","md","ml","lg","xl","createNavigationButtons","createNavigationButtonsAttribute","navigationButtonsSelector","hasNavigationButtonsClass","navigationButtonsTemplate","createNavigationBullets","createNavigationBulletsAttribute","navigationBulletsSelector","navigationBulletItemSelector","hasNavigationBulletsClass","navigationBulletsWrapperTemplate","navigationBulletItemTemplate","extended","deep","prototype","toString","call","arguments","obj","prop","hasOwnProperty","merge","distance","addEventListener","removeAnimatingClass","propertyName","removeEventListener","sliderContainer","style","transform","resizeSlider","height","getBoundingClientRect","width","slideIndex","slides","slideItem","marginLeft","removeSlideSizing","slideSpacingCount","item","rightEdge","right","spacing","left","getSlidesSpacing","containerWidth","sliderNavigation","display","sliderNavigationBullets","translateValue","msTransform","bullets","querySelectorAll","bullet","sliderNavigationPrev","sliderNavigationNext","setActiveSlide","initializeSlider","hammerManager","Hammer","Manager","Pan","direction","DIRECTION_HORIZONTAL","threshold","pointers","on","slidesToMove","deltaX","isFinal","velocityX","Math","abs","distanceChange","round","angle","createNavigationButtonsAttrValue","navigationElements","document","createElement","innerHTML","trim","appendChild","childNodes","createNavigationBulletsAttrValue","navigationBulletsElements","bulletElement","push","finishInit","sliders","init","options","RequireBundle","require"],"mappings":"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"}